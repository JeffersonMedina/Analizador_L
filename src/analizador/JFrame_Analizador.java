/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analizador;

import java.awt.MouseInfo;
import java.awt.Point;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Medina
 */
public class JFrame_Analizador extends javax.swing.JFrame {

    /**
     * Creates new form JFrame_Analizador
     */
    File archivo;
    DefaultTableModel tabla;
    Object[] inf = new Object[2];
    
    List<Token> tablaSimbolos;
    
    int x = 0, y = 0;
    
    public JFrame_Analizador() {
        initComponents();
        tabla = (DefaultTableModel)tabla_resultado.getModel();
        this.btn_resumen.setVisible(false);
        this.cbx_seleccion.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_resultado = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btn_salir = new javax.swing.JButton();
        txt_numemoji = new javax.swing.JTextField();
        txt_numcontraccion = new javax.swing.JTextField();
        txt_ruta = new javax.swing.JTextField();
        btn_cargar = new javax.swing.JButton();
        btn_analizar = new javax.swing.JButton();
        lb_ejecucion = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_numpalabra = new javax.swing.JTextField();
        lb_cargar = new javax.swing.JLabel();
        btn_resumen = new javax.swing.JButton();
        cbx_seleccion = new javax.swing.JComboBox<String>();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setName("jf_analizador"); // NOI18N
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setText("Analizador Léxico");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 12, -1, -1));

        tabla_resultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Valor"
            }
        ));
        tabla_resultado.setEnabled(false);
        jScrollPane1.setViewportView(tabla_resultado);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 400, 188));

        jLabel2.setText("N° Emoticones:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, -1));

        jLabel3.setText("N° Contracción:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, -1, -1));

        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });
        jPanel1.add(btn_salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(479, 279, -1, -1));

        txt_numemoji.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_numemoji.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_numemoji.setBorder(null);
        txt_numemoji.setEnabled(false);
        jPanel1.add(txt_numemoji, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, 50, -1));

        txt_numcontraccion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_numcontraccion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_numcontraccion.setBorder(null);
        txt_numcontraccion.setEnabled(false);
        jPanel1.add(txt_numcontraccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 50, -1));

        txt_ruta.setEditable(false);
        txt_ruta.setName("txt_ruta"); // NOI18N
        jPanel1.add(txt_ruta, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 398, -1));

        btn_cargar.setText("Cargar Archivo");
        btn_cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cargarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        btn_analizar.setText("Analizar");
        btn_analizar.setPreferredSize(new java.awt.Dimension(105, 23));
        btn_analizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_analizarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_analizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        lb_ejecucion.setEnabled(false);
        jPanel1.add(lb_ejecucion, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, -1, -1));

        jLabel4.setText("N° Palabras:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 290, -1, -1));

        txt_numpalabra.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_numpalabra.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_numpalabra.setBorder(null);
        txt_numpalabra.setEnabled(false);
        jPanel1.add(txt_numpalabra, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, 50, -1));

        lb_cargar.setEnabled(false);
        jPanel1.add(lb_cargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));

        btn_resumen.setText("Resumen");
        btn_resumen.setPreferredSize(new java.awt.Dimension(105, 23));
        btn_resumen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resumenActionPerformed(evt);
            }
        });
        jPanel1.add(btn_resumen, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        cbx_seleccion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Emoticon", "Contraccion", "Palabra", "Número" }));
        cbx_seleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_seleccionActionPerformed(evt);
            }
        });
        jPanel1.add(cbx_seleccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cargarActionPerformed
        this.btn_resumen.setVisible(false);
        this.cbx_seleccion.setVisible(false);
        this.cbx_seleccion.setSelectedIndex(0);
        txt_ruta.setText("");
        
        JFileChooser jf = new JFileChooser();
        jf.showOpenDialog(this);
        lb_cargar.setText("TA:");
        
        long startTime = System.currentTimeMillis();        
        while(tabla.getRowCount()>0)tabla.removeRow(0);
        archivo = jf.getSelectedFile();        
        if (archivo != null) {
            txt_ruta.setText(archivo.getAbsolutePath());
        }
        long endTime = System.currentTimeMillis() - startTime;
        lb_cargar.setText(lb_cargar.getText()+" "+endTime+" ms"); 
    }//GEN-LAST:event_btn_cargarActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_analizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_analizarActionPerformed
        while(tabla.getRowCount()>0)tabla.removeRow(0);
        this.cbx_seleccion.setSelectedIndex(0);
        int estado = 0;
        
        tablaSimbolos = new ArrayList<>();
        
        FileReader fr;
        StringBuffer sb;
        BufferedReader br;
        StringBuffer valor;
        
        String texto = " ";
        int emoji = 0, palabra = 0, contraccion = 0;
        char c;
        
        lb_ejecucion.setText("TE:");
        
        long startTime = System.currentTimeMillis();
        
        try {
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            
            String numero;
            while ((numero=br.readLine()) != null) {
                texto+=numero+" ";                
            }
            
            if (texto.trim().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Archivo vacio");
                this.btn_resumen.setVisible(false);
                this.cbx_seleccion.setVisible(false);
            }else{
                this.btn_resumen.setVisible(true);
                this.cbx_seleccion.setVisible(true);
            }
            
            
            sb = new StringBuffer(texto.trim().concat("  "));
            valor = new StringBuffer();
            int capacidad = sb.length();
            
            for (int i=0; i < capacidad; i++){            
                c = sb.charAt(i);
                
                switch (estado){
                case 0:                     
                    if (sb.charAt(i)==':'&&sb.charAt(i+1)=='*'||sb.charAt(i)==':'&&sb.charAt(i+1)=='$') {
                        estado = 2;//emoticon
                        valor.append(c);
                    }else if (sb.charAt(i)==':'||sb.charAt(i)=='=') {
                        estado = 1;//emoticon
                        valor.append(c);
                    }else if (sb.charAt(i)=='O'&&sb.charAt(i+1)=='.') {
                        estado = 3;
                        valor.append(c);                        
                    }else if (sb.charAt(i)=='O'&&sb.charAt(i+1)==':') {
                        estado = 4;
                        valor.append(c);
                    }else if (sb.charAt(i)=='('&&sb.charAt(i+1)=='Y'||sb.charAt(i)=='('&&sb.charAt(i+1)=='y') {
                        estado = 7;
                        valor.append(c);
                    }else if (sb.charAt(i)=='B'&&sb.charAt(i+1)==')'||sb.charAt(i)==';'&&sb.charAt(i+1)==')') {
                        estado = 6;
                        valor.append(c);
                    }else if (sb.charAt(i)=='<'&&sb.charAt(i+1)=='3') {
                        estado = 8;
                        valor.append(c);
                    }else if (sb.charAt(i)=='^'&&sb.charAt(i+1)=='_') {
                        estado = 9;
                        valor.append(c);
                    }else if (sb.charAt(i)=='-'&&sb.charAt(i+1)=='_') {
                        estado = 9;
                        valor.append(c);
                    }else if (Character.isAlphabetic(c)) {
                        if (sb.charAt(i)=='X'&&sb.charAt(i+1)=='d'||sb.charAt(i)=='X'&&sb.charAt(i+1)=='D'||sb.charAt(i)=='X'&&sb.charAt(i+1)=='q'||sb.charAt(i)=='X'&&sb.charAt(i+1)=='Q') {
                            estado = 12;
                            valor.append(c);
                        }else if (sb.charAt(i)=='D'&&sb.charAt(i+1)==' '||sb.charAt(i)=='d'&&sb.charAt(i+1)==' '||sb.charAt(i)=='Q'&&sb.charAt(i+1)==' '||sb.charAt(i)=='q'&&sb.charAt(i+1)==' ') {
                            estado = 12;
                            valor.append(c);
                        } else if (sb.charAt(i)=='x'&&sb.charAt(i+1)=='d'||sb.charAt(i)=='x'&&sb.charAt(i+1)=='D'||sb.charAt(i)=='x'&&sb.charAt(i+1)=='q'||sb.charAt(i)=='x'&&sb.charAt(i+1)=='Q') {
                            estado = 12;
                            valor.append(c);
                        }else if (sb.charAt(i)=='F'&&sb.charAt(i+1)=='m'||sb.charAt(i)=='f'&&sb.charAt(i+1)=='m') {
                            estado = 13;
                            valor.append(c);
                        }else{
                            estado = 15;
                            valor.append(c);
                        }
                        
                    }else if (Character.isDigit(c)) {
                        estado = 16;
                        valor.append(c);
                    } else if (sb.charAt(i)==' ') {
                        estado = 0;
                    }
                break;
                case 1: 
                    if (sb.charAt(i)=='/'||sb.charAt(i)=='('||sb.charAt(i)==')'||sb.charAt(i)=='D'||sb.charAt(i)=='P'||sb.charAt(i)=='O'||sb.charAt(i)=='o'||sb.charAt(i)=='p' ||sb.charAt(i)=='d') {
                        estado = 18;//estado final emoticon
                        valor.append(c);
                    }else if (sb.charAt(i)==' ') {
                        estado = 22;
                    }
                   
                break;
                case 2: 
                    if (sb.charAt(i)=='*'||sb.charAt(i)=='$') {
                        estado = 18;//estado final emoticon
                        valor.append(c);
                    }
                break;
                case 3: 
                    if (sb.charAt(i)=='.') {
                        if (sb.charAt(i+1)=='o') {
                            estado = 5;
                            valor.append(c);
                        }
                    }
                break;
                case 4: 
                    if (sb.charAt(i)==':') {
                        if (sb.charAt(i+1)==')') {
                            estado = 6;
                            valor.append(c);
                        }
                    }
                break;
                case 5:
                    if (sb.charAt(i)=='o') {
                        estado = 18;//estado final emoticon
                        valor.append(c);
                    }
                break;
                case 6: 
                    if (sb.charAt(i)==')') {
                        estado = 18;//estado final emoticon
                        valor.append(c);
                    }
                break;
                case 7: 
                    if (sb.charAt(i)=='Y'||sb.charAt(i)=='y') {
                        estado = 6;
                        valor.append(c);
                    }
                break;
                case 8: 
                    if (sb.charAt(i)=='3') {
                        estado = 18;//estado final emoticon
                        valor.append(c);
                    }
                break;
                case 9: 
                    if (sb.charAt(i)=='_'&&sb.charAt(i+1)=='^') {
                        estado = 10;
                        valor.append(c);
                    }else if (sb.charAt(i)=='_'&&sb.charAt(i+1)=='-') {
                        estado = 11;
                        valor.append(c);
                    }
                break;
                case 10: 
                    if (sb.charAt(i)=='^') {
                        estado = 18;//estado final emoticon
                        valor.append(c);
                    }
                break;
                case 11: 
                    if (sb.charAt(i)=='-') {
                        estado = 18;//estado final emoticon
                        valor.append(c);
                    }
                break;
                case 12: 
                    if (sb.charAt(i)=='d'||sb.charAt(i)=='D'||sb.charAt(i)=='q'||sb.charAt(i)=='Q') {
                        estado = 20;//estado final contracción
                        valor.append(c);
                    }else if (sb.charAt(i)==' ') {
                        estado = 20;//estado final contracción
                    }
                break;
                case 13: 
                    if (sb.charAt(i)=='m'&&sb.charAt(i+1)=='l') {
                        estado = 14;
                        valor.append(c);
                    }
                break;
                case 14: 
                    if (sb.charAt(i)=='l') {
                        estado = 20;//estado final contracción
                        valor.append(c);
                    }
                break;
                case 15: 
                    if(Character.isAlphabetic(c)){
                        estado = 15;
                        valor.append(c);
                    }else if (Character.isDigit(c)) {
                        estado = 15;
                        valor.append(c);
                    } else if(sb.charAt(i)==':'||sb.charAt(i)==';'||sb.charAt(i)=='='||sb.charAt(i)==')'||sb.charAt(i)=='('||sb.charAt(i)=='*'||sb.charAt(i)=='$'){
                        estado = 15;
                        valor.append(c);
                    }else if(sb.charAt(i)==' '){
                        estado = 19;//estado final palabra
//                        valor.append(c);
                    }
                break;
                case 16: 
                    if (Character.isDigit(c)) {
                        estado = 16;
                        valor.append(c);
                    }else if (Character.isAlphabetic(c)) {
                        estado = 15;
                        valor.append(c);
                    }else if (sb.charAt(i)==','&&sb.charAt(i+1)!=' '||sb.charAt(i)=='.'&&sb.charAt(i+1)!=' ') {
                        estado = 16;
                        valor.append(c);
                    }else if (sb.charAt(i)==' ') {
                        estado = 21;//estado final número
                    }
                break;
                case 17: 
                    
                break;
                
                case 18: 
                    tablaSimbolos.add(new Token("Emoticon", valor.toString()));
                    estado = 0;
                    valor = new StringBuffer();
                    i = i - 1;
                    emoji++;
                break;
                case 19: 
                    tablaSimbolos.add(new Token("Palabra", valor.toString()));
                    estado = 0;
                    valor = new StringBuffer();
                    i = i - 2;
                    palabra++;
                break;
                case 20: 
                    tablaSimbolos.add(new Token("Contracción", valor.toString()));
                    estado = 0;
                    valor = new StringBuffer();
                    i = i - 1;
                    contraccion++;
                break;
                case 21: 
                    tablaSimbolos.add(new Token("Número", valor.toString()));
                    estado = 0;
                    valor = new StringBuffer();
                    i = i - 1;
                    
                break;
                case 22: 
                    tablaSimbolos.add(new Token("Simbolo", valor.toString()));
                    estado = 0;
                    valor = new StringBuffer();
                    i = i - 1;
                break;
            }
                    
            }
            
            for (int a=0;a<tablaSimbolos.size();a++) {
                inf[0]=tablaSimbolos.get(a).ID;
                inf[1]=tablaSimbolos.get(a).Valor;
                tabla.addRow(inf);
            }
            
            txt_numemoji.setText(""+emoji);
            txt_numcontraccion.setText(""+contraccion);
            txt_numpalabra.setText(""+palabra);
            
       
        } catch (FileNotFoundException ex) {
            Logger.getLogger(JFrame_Analizador.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(JFrame_Analizador.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        long endTime = System.currentTimeMillis() - startTime;
        lb_ejecucion.setText(lb_ejecucion.getText()+" "+endTime+" ms");        
    }//GEN-LAST:event_btn_analizarActionPerformed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        Point point = MouseInfo.getPointerInfo().getLocation();
        setLocation(point.x - x, point.y - y);
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void btn_resumenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resumenActionPerformed
        while(tabla.getRowCount()>0)tabla.removeRow(0);
        this.cbx_seleccion.setSelectedIndex(0);
        
        Set<String> listaNoRepetidos = new TreeSet();
        
        for (int a=0;a<tablaSimbolos.size();a++) {                
            if (listaNoRepetidos.add(tablaSimbolos.get(a).Valor)) {
                inf[0]=tablaSimbolos.get(a).ID;
                inf[1]=tablaSimbolos.get(a).Valor;
                tabla.addRow(inf);                
            }
        }
    }//GEN-LAST:event_btn_resumenActionPerformed

    private void cbx_seleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_seleccionActionPerformed
//        Set<String> listaNoRepetidos = new TreeSet();

        if (cbx_seleccion.getSelectedIndex()==1) {
            while(tabla.getRowCount()>0)tabla.removeRow(0);
            for (int a=0;a<tablaSimbolos.size();a++) {                
//                if (listaNoRepetidos.add(tablaSimbolos.get(a).Valor)) {
                    inf[0]=tablaSimbolos.get(a).ID;
                    inf[1]=tablaSimbolos.get(a).Valor;
                    if (inf[0]=="Emoticon") {
                        tabla.addRow(inf);
                    }
//                }
            }
        }
        
        if (cbx_seleccion.getSelectedIndex()==2) {
            while(tabla.getRowCount()>0)tabla.removeRow(0);
            for (int a=0;a<tablaSimbolos.size();a++) {                
//                if (listaNoRepetidos.add(tablaSimbolos.get(a).Valor)) {
                    inf[0]=tablaSimbolos.get(a).ID;
                    inf[1]=tablaSimbolos.get(a).Valor;
                    if (inf[0]=="Contracción") {
                        tabla.addRow(inf);
                    }
//                }
            }
        }
        
        if (cbx_seleccion.getSelectedIndex()==3) {
            while(tabla.getRowCount()>0)tabla.removeRow(0);
            for (int a=0;a<tablaSimbolos.size();a++) {                
                //if (listaNoRepetidos.add(tablaSimbolos.get(a).Valor)) {
                    inf[0]=tablaSimbolos.get(a).ID;
                    inf[1]=tablaSimbolos.get(a).Valor;
                    if (inf[0]=="Palabra") {
                        tabla.addRow(inf);
                    }
                //}
            }
        }
        
        
        if (cbx_seleccion.getSelectedIndex()==4) {
            while(tabla.getRowCount()>0)tabla.removeRow(0);
            for (int a=0;a<tablaSimbolos.size();a++) {                
//                if (listaNoRepetidos.add(tablaSimbolos.get(a).Valor)) {
                    inf[0]=tablaSimbolos.get(a).ID;
                    inf[1]=tablaSimbolos.get(a).Valor;
                    if (inf[0]=="Número") {
                        tabla.addRow(inf);
                    }
//                }
            }
        }
    }//GEN-LAST:event_cbx_seleccionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_Analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JFrame_Analizador().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_analizar;
    private javax.swing.JButton btn_cargar;
    private javax.swing.JButton btn_resumen;
    private javax.swing.JButton btn_salir;
    private javax.swing.JComboBox<String> cbx_seleccion;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_cargar;
    private javax.swing.JLabel lb_ejecucion;
    private javax.swing.JTable tabla_resultado;
    private javax.swing.JTextField txt_numcontraccion;
    private javax.swing.JTextField txt_numemoji;
    private javax.swing.JTextField txt_numpalabra;
    private javax.swing.JTextField txt_ruta;
    // End of variables declaration//GEN-END:variables
}
